{"ast":null,"code":"var _jsxFileName = \"/Users/jason/Documents/Schoolwork/Fall 2022/EC327/Final-Project/Food-Tinder-EC327-Project/meal-mates/src/components/Card.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './Card.css';\nimport { useSpring, animated } from 'react-spring';\nimport { useDrag } from 'react-use-gesture';\nimport Actions from './Actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst left = {\n  bg: `linear-gradient(120deg, #f093fb 0%, #f5576c 100%)`,\n  justifySelf: 'end'\n};\nconst right = {\n  bg: `linear-gradient(120deg, #96fbc4 0%, #f9f586 100%)`,\n  justifySelf: 'start'\n};\nfunction Card(_ref) {\n  _s();\n  let {\n    title,\n    imageUrl,\n    body,\n    categories,\n    changeActionChoice,\n    additionFunc\n  } = _ref;\n  // Set the drag hook and define component movement based on gesture data\n  const [{\n    x,\n    bg,\n    scale,\n    justifySelf\n  }, api] = useSpring(() => ({\n    x: 0,\n    scale: 1,\n    ...left\n  }));\n  const bind = useDrag(_ref2 => {\n    let {\n      active,\n      movement: [mx],\n      cancel\n    } = _ref2;\n    if (mx > 350) {\n      cancel();\n      additionFunc(3);\n    }\n    if (mx < -350) {\n      cancel();\n      additionFunc(3);\n    }\n    api.start({\n      x: active ? mx : 0,\n      scale: active ? 1.1 : 1,\n      ...(mx < 0 ? left : right),\n      immediate: name => active && name === 'x'\n    });\n  });\n\n  // const bind = useDrag(({ down, movement: [mx, my], cancel, active }) => {\n\n  //     api.start({ \n  //         x: active ? mx : 0,\n  //         scale: active ? 1.1 : 1,\n  //         ...(x < 0 ? left : right), \n  //         immediate: name => active && name === 'x', \n  //     })\n  //     // api.start({ x: down ? mx : 0, y: down ? my : 0, immediate: down })\n  // })\n\n  const avSize = x.to({\n    map: Math.abs,\n    range: [50, 300],\n    output: [0.5, 1],\n    extrapolate: 'clamp'\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(animated.div, {\n      ...bind(),\n      className: \"backdrop\",\n      style: {\n        background: bg\n      },\n      children: /*#__PURE__*/_jsxDEV(animated.div, {\n        className: \"card-container\",\n        style: {\n          x,\n          scale\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-container\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: imageUrl,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-title\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: body.map(item => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [item, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 41\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: categories.map(item => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"-\", item.title, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 41\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Actions, {\n            person: \"fa\",\n            changeActionChoice: changeActionChoice // figure out how to test this function\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n_s(Card, \"wNYYVjTwObnr9PWmaxbZ971cJyc=\", false, function () {\n  return [useSpring, useDrag];\n});\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useSpring","animated","useDrag","Actions","left","bg","justifySelf","right","Card","title","imageUrl","body","categories","changeActionChoice","additionFunc","x","scale","api","bind","active","movement","mx","cancel","start","immediate","name","avSize","to","map","Math","abs","range","output","extrapolate","background","item"],"sources":["/Users/jason/Documents/Schoolwork/Fall 2022/EC327/Final-Project/Food-Tinder-EC327-Project/meal-mates/src/components/Card.js"],"sourcesContent":["import React from 'react'\nimport './Card.css'\nimport { useSpring, animated } from 'react-spring'\nimport { useDrag } from 'react-use-gesture'\nimport Actions from './Actions'\n\nconst left = {\n    bg: `linear-gradient(120deg, #f093fb 0%, #f5576c 100%)`,\n    justifySelf: 'end',\n}\nconst right = {\n    bg: `linear-gradient(120deg, #96fbc4 0%, #f9f586 100%)`,\n    justifySelf: 'start',\n}\n\nfunction Card({title, imageUrl, body, categories, changeActionChoice, additionFunc}) {\n    // Set the drag hook and define component movement based on gesture data\n    const [{ x, bg, scale, justifySelf }, api] = useSpring(() => ({\n        x: 0,\n        scale: 1,\n        ...left,\n    }))\n      \n    const bind = useDrag(({ active, movement: [mx], cancel }) => {\n        if (mx > 350) {\n            cancel()\n            additionFunc(3)\n        }\n\n        if (mx < -350) {\n            cancel()\n            additionFunc(3)\n        }\n\n        api.start({\n          x: active ? mx : 0,\n          scale: active ? 1.1 : 1,\n          ...(mx < 0 ? left : right),\n          immediate: name => active && name === 'x',\n        })\n    })\n\n    // const bind = useDrag(({ down, movement: [mx, my], cancel, active }) => {\n        \n    //     api.start({ \n    //         x: active ? mx : 0,\n    //         scale: active ? 1.1 : 1,\n    //         ...(x < 0 ? left : right), \n    //         immediate: name => active && name === 'x', \n    //     })\n    //     // api.start({ x: down ? mx : 0, y: down ? my : 0, immediate: down })\n    // })\n\n    const avSize = x.to({\n        map: Math.abs,\n        range: [50, 300],\n        output: [0.5, 1],\n        extrapolate: 'clamp',\n    })\n\n    return (\n        <div className=\"container\">\n            <animated.div {...bind()} className=\"backdrop\" style={{ background: bg }}>\n                <animated.div className=\"card-container\" style={{ x, scale }}>\n                    <div>\n                        <div className=\"image-container\">\n                            <img src={imageUrl} alt='' />\n                        </div>\n\n                        <div className=\"card-content\">\n                            <div className=\"card-title\">\n                                <h3>{title}</h3>\n                            </div>\n                            <div className=\"card-body\">\n                                {body.map(item => {\n                                    return (\n                                        <div>{item} </div>\n                                    )\n                                })}\n                            </div>\n                            <div>\n                                {categories.map(item => {\n                                    return (\n                                        <div>-{item.title} </div>\n                                    )\n                                })}           \n                            </div>\n                        </div>\n                        <Actions\n                            person='fa'\n                            changeActionChoice={ changeActionChoice } // figure out how to test this function\n                        />\n                    </div>\n                </animated.div>\n            </animated.div>\n        </div>\n    )\n}\n\nexport default Card"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}