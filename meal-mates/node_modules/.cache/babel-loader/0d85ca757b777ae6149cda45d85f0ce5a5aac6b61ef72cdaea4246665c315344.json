{"ast":null,"code":"var _jsxFileName = \"/Users/andrew/CS/Classes/EC327/Food-Tinder-EC327-Project/meal-mates/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport { useEffect, useState } from \"react\";\nimport axios from 'axios';\n\n// import {getRestInformation, ThirtyMinFromNow} from \"./components/APIs/YelpAPI\";\nimport { GeoLocation } from \"./components/APIs/GeoLocation\";\n\n// for matching, iterate through the type of cousine, in the array, and if matching, hold the information of\n// other type of food\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [dummy, setDummy] = useState(null);\n  // let myLocation = new GeoLocation()\n  // let long = myLocation.componentDidMount()\n  function getRestInformation(inputLocation, inputPrice) {\n    const options = {\n      method: 'GET',\n      url: 'https://api.yelp.com/v3/businesses/search',\n      params: {\n        location: inputLocation,\n        // latitude: lat,\n        // longitude: long,\n        price: inputPrice,\n        // open_at: ThirtyMinFromNow(), // Date now is unix time of now, 1800 is unix for + 30 minutes\n        sort_by: 'distance',\n        radius: 8047,\n        limit: '20' // randomize the limit that gets returned, min: 0, max: 50\n      },\n\n      headers: {\n        accept: 'application/json',\n        Authorization: 'Bearer l5_sN8Upkix19lLgwHxpAMThs0G2RBKr0rNRPxJ7ZmlOFagJ9EMi_1vv9o0BJNsto0R0hU1enjBhinEDROi6zODQWf_Tdzk2Lhq47-Z1Xz8EP2EEmjws8MyqSp-LY3Yx'\n      }\n    };\n    // Want to get name, distance, image_url, categories\n    let myWork = [];\n    axios.request(options).then(function (response) {\n      console.log(\"success\");\n      myWork = response.data['businesses'];\n      setDummy(myWork);\n    }).catch(function (error) {\n      console.error(error);\n    });\n  }\n  console.log('dummy that works???', dummy);\n  // useEffect(() => {\n  //   setTimeout(() => {\n  //     getRestInformation('NYC', [1,2,3,4])\n  //   },10000)\n  // }, [getRestInformation])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: dummy ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: 'available'\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getRestInformation('NYC', [1, 2, 3, 4]),\n      children: \"getinformation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8FvbPYj5A5Xy+3AxSbNleC4lbSw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","useEffect","useState","axios","GeoLocation","App","dummy","setDummy","getRestInformation","inputLocation","inputPrice","options","method","url","params","location","price","sort_by","radius","limit","headers","accept","Authorization","myWork","request","then","response","console","log","data","catch","error"],"sources":["/Users/andrew/CS/Classes/EC327/Food-Tinder-EC327-Project/meal-mates/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport {useEffect, useState} from \"react\";\nimport axios from 'axios';\n\n// import {getRestInformation, ThirtyMinFromNow} from \"./components/APIs/YelpAPI\";\nimport {GeoLocation} from \"./components/APIs/GeoLocation\";\n\n// for matching, iterate through the type of cousine, in the array, and if matching, hold the information of\n// other type of food\n\nfunction App() {\n  const [dummy, setDummy] = useState(null)\n  // let myLocation = new GeoLocation()\n  // let long = myLocation.componentDidMount()\n  function getRestInformation(inputLocation, inputPrice) {\n    const options = {\n      method: 'GET',\n      url: 'https://api.yelp.com/v3/businesses/search',\n      params: {\n        location: inputLocation,\n        // latitude: lat,\n        // longitude: long,\n        price: inputPrice,\n        // open_at: ThirtyMinFromNow(), // Date now is unix time of now, 1800 is unix for + 30 minutes\n        sort_by: 'distance',\n        radius: 8047,\n        limit: '20' // randomize the limit that gets returned, min: 0, max: 50\n      },\n      headers: {\n        accept: 'application/json',\n        Authorization:\n            'Bearer l5_sN8Upkix19lLgwHxpAMThs0G2RBKr0rNRPxJ7ZmlOFagJ9EMi_1vv9o0BJNsto0R0hU1enjBhinEDROi6zODQWf_Tdzk2Lhq47-Z1Xz8EP2EEmjws8MyqSp-LY3Yx'\n      }\n    };\n    // Want to get name, distance, image_url, categories\n    let myWork = []\n    axios\n        .request(options)\n        .then(function (response) {\n\n          console.log(\"success\")\n          myWork = response.data['businesses']\n          setDummy(myWork)\n\n        })\n        .catch(function (error) {\n          console.error(error);\n        });\n  }\n  console.log('dummy that works???', dummy)\n  // useEffect(() => {\n  //   setTimeout(() => {\n  //     getRestInformation('NYC', [1,2,3,4])\n  //   },10000)\n  // }, [getRestInformation])\n\n  return (\n    <div className=\"App\">\n      {dummy? <>{'available'}</> : (\n          <button onClick={getRestInformation('NYC',[1,2,3,4])}>getinformation</button>\n      )}\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,SAAQC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACzC,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA,SAAQC,WAAW,QAAO,+BAA+B;;AAEzD;AACA;AAAA;AAAA;AAEA,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACxC;EACA;EACA,SAASM,kBAAkB,CAACC,aAAa,EAAEC,UAAU,EAAE;IACrD,MAAMC,OAAO,GAAG;MACdC,MAAM,EAAE,KAAK;MACbC,GAAG,EAAE,2CAA2C;MAChDC,MAAM,EAAE;QACNC,QAAQ,EAAEN,aAAa;QACvB;QACA;QACAO,KAAK,EAAEN,UAAU;QACjB;QACAO,OAAO,EAAE,UAAU;QACnBC,MAAM,EAAE,IAAI;QACZC,KAAK,EAAE,IAAI,CAAC;MACd,CAAC;;MACDC,OAAO,EAAE;QACPC,MAAM,EAAE,kBAAkB;QAC1BC,aAAa,EACT;MACN;IACF,CAAC;IACD;IACA,IAAIC,MAAM,GAAG,EAAE;IACfpB,KAAK,CACAqB,OAAO,CAACb,OAAO,CAAC,CAChBc,IAAI,CAAC,UAAUC,QAAQ,EAAE;MAExBC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;MACtBL,MAAM,GAAGG,QAAQ,CAACG,IAAI,CAAC,YAAY,CAAC;MACpCtB,QAAQ,CAACgB,MAAM,CAAC;IAElB,CAAC,CAAC,CACDO,KAAK,CAAC,UAAUC,KAAK,EAAE;MACtBJ,OAAO,CAACI,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CAAC;EACR;EACAJ,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEtB,KAAK,CAAC;EACzC;EACA;EACA;EACA;EACA;;EAEA,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,UACjBA,KAAK,gBAAE;MAAA,UAAG;IAAW,iBAAI,gBACtB;MAAQ,OAAO,EAAEE,kBAAkB,CAAC,KAAK,EAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EACxD;IAAA;IAAA;IAAA;EAAA,QAEG;AAEV;AAAC,GAtDQH,GAAG;AAAA,KAAHA,GAAG;AAwDZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}