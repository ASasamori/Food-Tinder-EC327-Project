{"ast":null,"code":"import axios from 'axios';\n\n// Have to allow cross-control open access\n// Have to open terminal and use the following lines (make sure in open terminal)\n// open -na Google\\ Chrome --args --user-data-dir=/tmp/temporary-chrome-profile-dir --disable-web-security\n\n//inputOpenAt is if the location is open in 30 minutes or not; has to use the Unix time code\n//inputPrice is an integer array, with options of being: 1,2,3,4; 1 is cheapest, 4 is Gordon Ramsay\nexport function getRestInformation(inputLocation, inputPrice, inputOpenAt) {\n  const options = {\n    method: 'GET',\n    url: 'https://api.yelp.com/v3/businesses/search',\n    params: {\n      location: inputLocation,\n      price: inputPrice,\n      open_at: inputOpenAt,\n      sort_by: 'distance',\n      radius: 8047,\n      limit: '1'\n    },\n    headers: {\n      accept: 'application/json',\n      Authorization: 'Bearer <insert Yelp Fusion API key here>'\n    }\n  };\n  // Want to get name, distance, image_url, categories\n  let ans = [];\n  axios.request(options).then(function (response) {\n    let e = response.data.businesses[0];\n    ans.push(e); //is all the businesses of the list of things that you can retrieve\n    //ans.push(e.name, e.distance, e.image_url, e.categories) // to retrieve these specific values\n  }).catch(function (error) {\n    console.error(error);\n  });\n  return ans;\n}\nexport function getCurrentTimeStampPlusThirtyMin() {\n  const whyIs = Date.now() + 1800;\n  return whyIs;\n}","map":{"version":3,"names":["axios","getRestInformation","inputLocation","inputPrice","inputOpenAt","options","method","url","params","location","price","open_at","sort_by","radius","limit","headers","accept","Authorization","ans","request","then","response","e","data","businesses","push","catch","error","console","getCurrentTimeStampPlusThirtyMin","whyIs","Date","now"],"sources":["/Users/andrew/CS/Classes/EC327/Food-Tinder-EC327-Project/meal-mates/src/Components/YelpAPI.js"],"sourcesContent":["import axios from 'axios';\n\n// Have to allow cross-control open access\n// Have to open terminal and use the following lines (make sure in open terminal)\n// open -na Google\\ Chrome --args --user-data-dir=/tmp/temporary-chrome-profile-dir --disable-web-security\n\n//inputOpenAt is if the location is open in 30 minutes or not; has to use the Unix time code\n//inputPrice is an integer array, with options of being: 1,2,3,4; 1 is cheapest, 4 is Gordon Ramsay\nexport function getRestInformation(inputLocation, inputPrice, inputOpenAt) {\n    const options = {\n        method: 'GET',\n        url: 'https://api.yelp.com/v3/businesses/search',\n        params: {\n            location: inputLocation,\n            price: inputPrice,\n            open_at: inputOpenAt,\n            sort_by: 'distance',\n            radius: 8047,\n            limit: '1'\n        },\n        headers: {\n            accept: 'application/json',\n            Authorization:\n                'Bearer <insert Yelp Fusion API key here>'\n        }\n    };\n    // Want to get name, distance, image_url, categories\n    let ans = []\n    axios\n        .request(options)\n        .then(function (response) {\n            let e = response.data.businesses[0];\n            ans.push(e) //is all the businesses of the list of things that you can retrieve\n            //ans.push(e.name, e.distance, e.image_url, e.categories) // to retrieve these specific values\n        })\n        .catch(function (error) {\n            console.error(error);\n        });\n    return ans\n}\nexport function getCurrentTimeStampPlusThirtyMin() {\n    const whyIs = (Date.now() + 1800);\n    return whyIs\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;;AAEA;AACA;AACA,OAAO,SAASC,kBAAkB,CAACC,aAAa,EAAEC,UAAU,EAAEC,WAAW,EAAE;EACvE,MAAMC,OAAO,GAAG;IACZC,MAAM,EAAE,KAAK;IACbC,GAAG,EAAE,2CAA2C;IAChDC,MAAM,EAAE;MACJC,QAAQ,EAAEP,aAAa;MACvBQ,KAAK,EAAEP,UAAU;MACjBQ,OAAO,EAAEP,WAAW;MACpBQ,OAAO,EAAE,UAAU;MACnBC,MAAM,EAAE,IAAI;MACZC,KAAK,EAAE;IACX,CAAC;IACDC,OAAO,EAAE;MACLC,MAAM,EAAE,kBAAkB;MAC1BC,aAAa,EACT;IACR;EACJ,CAAC;EACD;EACA,IAAIC,GAAG,GAAG,EAAE;EACZlB,KAAK,CACAmB,OAAO,CAACd,OAAO,CAAC,CAChBe,IAAI,CAAC,UAAUC,QAAQ,EAAE;IACtB,IAAIC,CAAC,GAAGD,QAAQ,CAACE,IAAI,CAACC,UAAU,CAAC,CAAC,CAAC;IACnCN,GAAG,CAACO,IAAI,CAACH,CAAC,CAAC,EAAC;IACZ;EACJ,CAAC,CAAC,CACDI,KAAK,CAAC,UAAUC,KAAK,EAAE;IACpBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACxB,CAAC,CAAC;EACN,OAAOT,GAAG;AACd;AACA,OAAO,SAASW,gCAAgC,GAAG;EAC/C,MAAMC,KAAK,GAAIC,IAAI,CAACC,GAAG,EAAE,GAAG,IAAK;EACjC,OAAOF,KAAK;AAChB"},"metadata":{},"sourceType":"module","externalDependencies":[]}