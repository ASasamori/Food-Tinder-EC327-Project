{"ast":null,"code":"var _jsxFileName = \"/Users/andrew/CS/Classes/EC327/Food-Tinder-EC327-Project/meal-mates/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport { getRestInformation, ThirtyMinFromNow } from \"./components/APIs/YelpAPI\";\nimport { GeoLocation } from \"./components/APIs/GeoLocation\";\n\n// for matching, iterate through the type of cousine, in the array, and if matching, hold the information of\n// other type of food\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [dummy, setDummy] = useState(null);\n  // let myLocation = new GeoLocation()\n  // let long = myLocation.componentDidMount()\n\n  // Dummy function call to get the closest restaurant from you\n  let ans = getRestInformation('610 Beacon Street Boston 02215', [1, 2, 3, 4]);\n  console.log(ans);\n  // ans.forEach(business => console.log(business))\n\n  // let wtf = new GeoLocation()\n  // wtf.componentDidMount()\n  //useEffect(() => {\n  //   setDummy(getRestInformation('NYC',[1,2,3]))\n  //   console.log('dummy: ',dummy)\n  // }, [])\n\n  const yelpHandler = () => {\n    // axios.get('https://api.yelp.com/v3/businesses/search', 'New York City', {\n    // headers: {\n    //   'Content-Type': 'application/json',\n    //   Authorization: 'Bearer l5_sN8Upkix19lLgwHxpAMThs0G2RBKr0rNRPxJ7ZmlOFagJ9EMi_1vv9o0BJNsto0R0hU1enjBhinEDROi6zODQWf_Tdzk2Lhq47-Z1Xz8EP2EEmjws8MyqSp-LY3Yx'\n    // }\n    // }).then((res) => {\n    //   console.log('response from handler: ', res)\n    // }).catch((err) => {\n    //   console.log(err)\n    // })\n    function getRestInfor(inputLocation, inputPrice) {\n      const options = {\n        method: 'GET',\n        url: 'https://api.yelp.com/v3/businesses/search',\n        params: {\n          location: 'NYC',\n          // latitude: lat,\n          // longitude: long,\n          price: [1, 2, 3, 4],\n          open_at: ThirtyMinFromNow(),\n          // Date now is unix time of now, 1800 is unix for + 30 minutes\n          sort_by: 'distance',\n          radius: 8047,\n          limit: '20' // randomize the limit that gets returned, min: 0, max: 50\n        },\n\n        headers: {\n          accept: 'application/json',\n          Authorization: 'Bearer l5_sN8Upkix19lLgwHxpAMThs0G2RBKr0rNRPxJ7ZmlOFagJ9EMi_1vv9o0BJNsto0R0hU1enjBhinEDROi6zODQWf_Tdzk2Lhq47-Z1Xz8EP2EEmjws8MyqSp-LY3Yx'\n        }\n      };\n      // Want to get name, distance, image_url, categories\n      let myWork = [];\n      axios.request(options).then(function (response) {\n        // for (let i = 0; i < 20; i++) {\n        // let x = response.data\n        // myWork.push(response.data.businesses[i])\n        console.log(\"success\", response);\n        myWork = response.data['businesses'];\n        setDummy(myWork);\n        // let = response.data.businesses\n        // myWork.push(e)\n        //is all the businesses of the list of things that you can retrieve\n        // }\n        // This code doesn't even get reached?\n        //ans.push(e.name, e.distance, e.image_url, e.categories) // to retrieve these specific values\n      }).catch(function (error) {\n        console.error(error);\n      });\n      // let myNewJSON = {table:[]}\n      // let json = JSON.stringify(myWork);\n      //\n      // let fs = require('fs');\n      // fs.writeFile('myjsonfile.json', json, 'utf8', callback);\n      //console.log('end of function: ', myWork)\n      return myWork;\n    }\n    getRestInfor();\n  };\n  console.log('dummy that works???', dummy);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"src/App.js\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 16\n        }, this), \" and save to reload.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: 'button',\n        onClick: yelpHandler,\n        children: \"CLiCK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"App-link\",\n        href: \"https://reactjs.org\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Learn React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), dummy ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: console.log('first dummy: ', dummy[0])\n    }, void 0, false) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8FvbPYj5A5Xy+3AxSbNleC4lbSw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","useEffect","useState","axios","getRestInformation","ThirtyMinFromNow","GeoLocation","App","dummy","setDummy","ans","console","log","yelpHandler","getRestInfor","inputLocation","inputPrice","options","method","url","params","location","price","open_at","sort_by","radius","limit","headers","accept","Authorization","myWork","request","then","response","data","catch","error"],"sources":["/Users/andrew/CS/Classes/EC327/Food-Tinder-EC327-Project/meal-mates/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport {useEffect, useState} from \"react\";\nimport axios from 'axios';\n\nimport {getRestInformation, ThirtyMinFromNow} from \"./components/APIs/YelpAPI\";\nimport {GeoLocation} from \"./components/APIs/GeoLocation\";\n\n// for matching, iterate through the type of cousine, in the array, and if matching, hold the information of\n// other type of food\n\nfunction App() {\n  const [dummy, setDummy] = useState(null)\n  // let myLocation = new GeoLocation()\n  // let long = myLocation.componentDidMount()\n\n  // Dummy function call to get the closest restaurant from you\n  let ans = getRestInformation('610 Beacon Street Boston 02215',[1,2,3,4])\n  console.log(ans)\n  // ans.forEach(business => console.log(business))\n\n  // let wtf = new GeoLocation()\n  // wtf.componentDidMount()\n  //useEffect(() => {\n  //   setDummy(getRestInformation('NYC',[1,2,3]))\n  //   console.log('dummy: ',dummy)\n  // }, [])\n\n  const yelpHandler = () => {\n    // axios.get('https://api.yelp.com/v3/businesses/search', 'New York City', {\n    // headers: {\n    //   'Content-Type': 'application/json',\n    //   Authorization: 'Bearer l5_sN8Upkix19lLgwHxpAMThs0G2RBKr0rNRPxJ7ZmlOFagJ9EMi_1vv9o0BJNsto0R0hU1enjBhinEDROi6zODQWf_Tdzk2Lhq47-Z1Xz8EP2EEmjws8MyqSp-LY3Yx'\n    // }\n    // }).then((res) => {\n    //   console.log('response from handler: ', res)\n    // }).catch((err) => {\n    //   console.log(err)\n    // })\n    function getRestInfor(inputLocation, inputPrice) {\n      const options = {\n        method: 'GET',\n        url: 'https://api.yelp.com/v3/businesses/search',\n        params: {\n          location: 'NYC',\n          // latitude: lat,\n          // longitude: long,\n          price: [1,2,3,4],\n          open_at: ThirtyMinFromNow(), // Date now is unix time of now, 1800 is unix for + 30 minutes\n          sort_by: 'distance',\n          radius: 8047,\n          limit: '20' // randomize the limit that gets returned, min: 0, max: 50\n        },\n        headers: {\n          accept: 'application/json',\n          Authorization:\n              'Bearer l5_sN8Upkix19lLgwHxpAMThs0G2RBKr0rNRPxJ7ZmlOFagJ9EMi_1vv9o0BJNsto0R0hU1enjBhinEDROi6zODQWf_Tdzk2Lhq47-Z1Xz8EP2EEmjws8MyqSp-LY3Yx'\n        }\n      };\n      // Want to get name, distance, image_url, categories\n      let myWork = []\n      axios\n          .request(options)\n          .then(function (response) {\n            // for (let i = 0; i < 20; i++) {\n            // let x = response.data\n            // myWork.push(response.data.businesses[i])\n            console.log(\"success\", response)\n            myWork = response.data['businesses']\n            setDummy(myWork)\n            // let = response.data.businesses\n            // myWork.push(e)\n            //is all the businesses of the list of things that you can retrieve\n            // }\n            // This code doesn't even get reached?\n            //ans.push(e.name, e.distance, e.image_url, e.categories) // to retrieve these specific values\n          })\n          .catch(function (error) {\n            console.error(error);\n          });\n      // let myNewJSON = {table:[]}\n      // let json = JSON.stringify(myWork);\n      //\n      // let fs = require('fs');\n      // fs.writeFile('myjsonfile.json', json, 'utf8', callback);\n      //console.log('end of function: ', myWork)\n      return myWork\n    }\n\n    getRestInfor()\n  }\n\n  console.log('dummy that works???', dummy)\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <button type={'button'} onClick={yelpHandler}>CLiCK</button>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n      {dummy? <>{console.log('first dummy: ', dummy[0])}</> : null}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}